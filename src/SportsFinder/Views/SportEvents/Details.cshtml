@model SportsFinder.Models.SportEvent

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

@{ 
    string Equipment = Model.EquipmentList;
    string[] EquipArray = Equipment.Split(',');

    
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $("#RSVP").click(function () {
            if($(this).text()=="Reservation For Event")
            {
                $(this).text("Cancel Resrevation");

            }
            else
            {
                $(this).text("Reservation For Event");

            }

        });

    });
</script>

<table>
    <tr>



        <div>
            <h4>SportEvent</h4>
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.EquipmentList)
                </dt>
                @*<dd>
                        @Html.DisplayFor(model => model.EquipmentList)
                    </dd>*@
                <dd>
                    <div class="checkbox" id="equipment-list" style="float: left">
                        @foreach (string item in EquipArray)
                        {
                            <div>
                                <label><input type="checkbox" value="@(item)" />@(item)</label>
                            </div>
                        }
                    </div>
                    <div style="margin-top: 30px; margin-left: 20%">
                        <a class="btn btn-primary" id="commit-equipment-change">Bring Equipment</a>
                    </div>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EventSport)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.EventSport)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.EventTime)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.EventTime)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.IsTentative)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.IsTentative)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Latitude)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Latitude)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Longitude)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Longitude)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.MaxPeopleAllowed)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.MaxPeopleAllowed)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.PplAttendingCount)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.PplAttendingCount)
                </dd>
            </dl>
            
    </tr>
    <div style="margin-top: 30px; margin-left: 30%">
        <a class="btn btn-primary" id="RSVP">Reservation For Event</a>
    </div>
    <tr>

    </tr>
    </div>
</table>
<div class="container" style="margin: 20px">
    <div id="map-canvas" style="width: 600px; height: 400px"></div>
</div>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAG8diNyE5CdFVLOvf9u7NlVoi6aEk8SH8"></script>
<script type="text/javascript">

    var googleMap;
    var modelLat;
    var modelLng;
    var eventTitle;

    modelLat = '@(Model.Latitude)';
    modelLng = '@(Model.Longitude)';
    title = '@(Model.EventSport)';

    function initialize() {

        var location = {
            lat: parseFloat(modelLat),
            lng: parseFloat(modelLng)
        };

        var mapOptions = {
            zoom: 12,
            center: location,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        googleMap = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

        var marker = new google.maps.Marker({
            position: location,
            map: googleMap,
            title: eventTitle
        });
    }

    google.maps.event.addDomListener(window, 'load', initialize);

</script>

<script>

    window.addEventListener('load', function () {

        // IE does not know about the target attribute. It looks for srcElement
        // This function will get the event target in a browser-compatible way
        function getEventTarget(e) {
            e = e || window.event;
            return e.target || e.srcElement;
        }

        var equipList = document.getElementById('equipment-list');
        equipList.onclick = function (event) {
            event.preventDefault;
            var target = getEventTarget(event);
            console.log(target.value);
        };

        var bringEquipmentButton = document.getElementById('commit-equipment-change');
        bringEquipmentButton.onclick = function () {
            console.log('clicked button');
        }

    });
    

</script>

<p>
    @*<a asp-action="Edit" asp-route-id="@Model.ID" class="btn btn-danger">Edit</a> |*@
    <a asp-action="Index" class="btn btn-primary">Back to List</a>
</p>
